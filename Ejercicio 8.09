#include <stdio.h>
#define N 10

// Prototipos
void validar_positividad(int *a);
void validar_no_primo(int *a);
int es_primo(int num);

int main(void) {
    int arreglo[N];

    // Cargar con validación de positividad y <100
    for (int i = 0; i < N; i++) {
        validar_positividad(&arreglo[i]);
    }

    // Verificar y corregir primos
    for (int i = 0; i < N; i++) {
        validar_no_primo(&arreglo[i]);
    }

    // Mostrar arreglo final
    printf("\nArreglo final:\n");
    for (int i = 0; i < N; i++) {
        printf("%d ", arreglo[i]);
    }
    printf("\n");

    return 0;
}

// Valida que el valor ingresado sea >=0 y <100
// Si no lo es, sigue pidiendo hasta que cumpla
void validar_positividad(int *a) {
    do {
        printf("Ingrese un valor (0-99): ");
        scanf("%d", a);
        if (*a < 0 || *a >= 100) {
            printf("Valor inválido. Debe estar entre 0 y 99.\n");
        }
    } while (*a < 0 || *a >= 100);
}

// Si el número es primo, lo incrementa en 1
void validar_no_primo(int *a) {
    if (es_primo(*a)) {
        (*a)++;  // incrementar por referencia
    }
}

// Función auxiliar para determinar si un número es primo
int es_primo(int num) {
    if (num < 2) return 0;  // 0 y 1 no son primos
    for (int i = 2; i * i <= num; i++) {
        if (num % i == 0) {
            return 0;  // No es primo
        }
    }
    return 1;  // Es primo
}
