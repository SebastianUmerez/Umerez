#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define N 20

// Prototipos
void inicializar_arreglo(int *arr, int tam);
void contar_positivos(int *arr, int tam, int *cant_positivos);
void contar_negativos(int *arr, int tam, int *cant_negativos);
void copiar_positivos(int *arr, int *positivos, int tam);
void copiar_negativos(int *arr, int *negativos, int tam);
void imprimir_arreglo(int *arr, int tam);

int main(void) {
    int arreglo[N] = {0};
    int positivos[N] = {0}, negativos[N] = {0};
    int cant_positivos = 0, cant_negativos = 0;

    srand(time(NULL)); // Inicializar semilla para nros aleatorios

    // Requisito 1: inicializar arreglo con valores aleatorios entre -300 y 500
    inicializar_arreglo(arreglo, N);

    // Requisito 2: contar positivos y negativos
    contar_positivos(arreglo, N, &cant_positivos);
    printf("\nCantidad de números positivos: %d\n", cant_positivos);

    contar_negativos(arreglo, N, &cant_negativos);
    printf("Cantidad de números negativos: %d\n\n", cant_negativos);

    // Requisito 3: copiar positivos y negativos en otros arreglos
    copiar_positivos(arreglo, positivos, N);
    copiar_negativos(arreglo, negativos, N);

    // Mostrar resultados
    printf("Arreglo original:\n");
    imprimir_arreglo(arreglo, N);

    printf("Arreglo de números positivos:\n");
    imprimir_arreglo(positivos, N);

    printf("Arreglo de números negativos:\n");
    imprimir_arreglo(negativos, N);

    return 0;
}

// Genera valores aleatorios entre -300 y 500
void inicializar_arreglo(int *arr, int tam) {
    for (int i = 0; i < tam; i++) {
        *(arr + i) = (rand() % 801) - 300; // rango -300 a 500
    }
}

// Cuenta los positivos
void contar_positivos(int *arr, int tam, int *cant_positivos) {
    *cant_positivos = 0;
    for (int i = 0; i < tam; i++) {
        if (*(arr + i) > 0) {
            (*cant_positivos)++;
        }
    }
}

// Cuenta los negativos
void contar_negativos(int *arr, int tam, int *cant_negativos) {
    *cant_negativos = 0;
    for (int i = 0; i < tam; i++) {
        if (*(arr + i) < 0) {
            (*cant_negativos)++;
        }
    }
}

// Copia positivos en otro arreglo, dejando 0 en las demás posiciones
void copiar_positivos(int *arr, int *positivos, int tam) {
    for (int i = 0; i < tam; i++) {
        if (*(arr + i) > 0) {
            *(positivos + i) = *(arr + i);
        } else {
            *(positivos + i) = 0;
        }
    }
}

// Copia negativos en otro arreglo, dejando 0 en las demás posiciones
void copiar_negativos(int *arr, int *negativos, int tam) {
    for (int i = 0; i < tam; i++) {
        if (*(arr + i) < 0) {
            *(negativos + i) = *(arr + i);
        } else {
            *(negativos + i) = 0;
        }
    }
}

// Imprime los elementos de un arreglo
void imprimir_arreglo(int *arr, int tam) {
    for (int i = 0; i < tam; i++) {
        printf("%d ", *(arr + i));
    }
    printf("\n\n");
}
